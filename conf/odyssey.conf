###
### Odyssey configuration file.
###

#
# Include files.
#
# Include one or more configuration files. Include files can
# include other files.
#
# include "path"
#
# https://github.com/yandex/odyssey/issues/41
include "/etc/odyssey/routing.conf"

###
### SERVICE
###

#
# Start as a daemon.
#
# By default Odyssey does not run as a daemon. Set to 'yes' to enable.
#
daemonize no

#
# Pid file.
#
# If pid_file is specified, Odyssey will write its process id to
# the specified file at startup.
#
# pid_file "/var/run/odyssey.pid"
#

#
# UNIX socket directory.
#
# If unix_socket_dir is specified, Odyssey will enable UNIX socket
# communications. Specified directory path will be used for
# searching socket files.
#
unix_socket_dir "/tmp"

#
# UNIX socket file mode.
#
# Set `unix_socket_mode` file mode to any created unix files.
#
unix_socket_mode "0644"

###
### LOGGING
###

#
# Log file.
#
# If log_file is specified, Odyssey will additionally use it to write
# log events.
#
# log_file "/var/log/odyssey.log"
#

#
# Log text format.
#
# Odyssey allows to configure log text format. This could be useful to
# support external log parser format. Format string can contain plain
# text, escape symbols and format flags.
#
# Supported flags:
#
# %n = unixtime
# %t = timestamp with date
# %p = process ID
# %i = client ID
# %s = server ID
# %u = user name
# %d = database name
# %c = context
# %l = level (error, warning, debug)
# %m = message
# %M = message tskv
# %r = client port
# %h = client host
#
log_format "%p %t %l [%i %s] (%c) %m\n"

#
# Log to stdout.
#
# Set to 'yes' if you need to additionally display log output in stdout.
# Enabled by default.
#
log_to_stdout yes

#
# Log to system logger.
#
# To enable syslog(3) usage, set log_syslog to 'yes'. Additionally set
# log_syslog_ident and log_syslog_facility.
#
log_syslog no
log_syslog_ident "odyssey"
log_syslog_facility "daemon"

#
# Verbose logging.
#
# Enable verbose logging of all events, which will generate a log of
# detailed information useful for development or testing.
#
# It is also possible to enable verbose logging for specific users
# (see routes section).
#
log_debug no

#
# Log configuration.
#
# Write configuration to the log during start and config reload.
#
log_config yes

#
# Log session events.
#
# Write client connect and disconnect events to the log.
#
log_session yes

#
# Log client queries.
#
# Write client queries text to the log. Disabled by default.
#
log_query no

#
# Log client statistics.
#
# Periodically display information about active routes.
#
log_stats yes

#
# Statistics update inverval.
#
# Set interval in seconds for internal statistics update and log report.
#
stats_interval 60

###
### PERFORMANCE
###

#
# Worker threads.
#
# Set size of thread pool used for client processing.
#
#  1: By default, Odyssey runs with a single worker. This is a special
#  mode optimized for general use. This mode also made to reduce multi-thread
#  communication overhead.
#
#  N: Add additional worker threads, if your server experience heavy load,
#  especially using TLS setup.
#
workers 1

#
# Resolver threads.
#
# Number of threads used for DNS resolving. This value can be increased, if
# your server experience a big number of connecting clients.
#
resolvers 1

#
# IO Readahead.
#
# Set size of per-connection buffer used for io readahead operations.
#
readahead 8192

#
# Coroutine cache size.
#
# Set pool size of free coroutines cache. It is a good idea to set
# this value to a sum of max clients plus server connections. Please note, that
# each coroutine consumes around `coroutine_stack_size` of memory.
#
# Set to zero, to disable coroutine cache.
#
cache_coroutine 128

#
# Coroutine stack size.
#
# Set coroutine stack size in pages. In some rare cases
# it might be necessary to make stack size bigger. Actual stack will be
# allocated as (`coroutine_stack_size` + 1_guard_page) * page_size.
# Guard page is used to track stack overflows.
#
# 16KB by default.
#
coroutine_stack_size 4

#
# TCP nodelay.
#
# Set to 'yes', to enable nodelay.
#
nodelay yes

#
# TCP keepalive time.
#
# Set to zero, to disable keepalive.
#
keepalive 7200

###
### GLOBAL LIMITS
###

#
# Global limit of client connections.
#
# Comment 'client_max' to disable the limit. On client limit reach, Odyssey will
# reply with 'too many connections'.
#
# client_max 100

###
### LISTEN
###

#
# Listen section defines listening servers used for accepting
# incoming client connections.
#
# It is possible to define several Listen sections. Odyssey will listen on
# every specified address port and can use separate TLS settings.
#
# Odyssey will fail in case it could not bind on any resolved address.
#

listen {
#
# 	Bind address.
#
#	If host is not set, Odyssey will try to listen using UNIX socket if
#	unix_socket_dir is set.
#
	host "*"
#
#	Listen port.
	port 6432
#
#	TCP listen backlog.
	backlog 128
#
#	TLS support.
#
#	Supported TLS modes:
#
#	"disable"     - disable TLS protocol
#	"allow"       - switch to TLS protocol on request
#	"require"     - TLS clients only
#	"verify_ca"   - require valid client certificate
#	"verify_full" - require valid client ceritifcate
#
#	tls "disable"
#	tls_ca_file ""
#	tls_key_file ""
#	tls_cert_file ""
#	tls_protocols ""
}

# Does not work, error 139
#include "/etc/odyssey/routing.conf"


###
### ADMIN CONSOLE (example)
###

#storage "local" {
#	type "local"
#}

#database "console" {
#	user default {
#		authentication "none"
#		pool "session"
#		storage "local"
#	}
#}
